services:
  postgres:
    image: postgres:15
    container_name: airflow_postgres
    restart: unless-stopped
    env_file: .env.prod
    volumes:
      - postgres_data:/var/lib/postgresql/data

  airflow-init:
    image: apache/airflow:2.10.4
    depends_on:
      - postgres
    env_file: .env.prod
    environment:
      AIRFLOW_HOME: /opt/airflow
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__API__AUTH_BACKENDS: "airflow.api.auth.backend.basic_auth"
    entrypoint: ["/bin/bash", "/opt/airflow/init.sh"]
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/data:/opt/airflow/data
      - ./airflow/init.sh:/opt/airflow/init.sh


  airflow-webserver:
    build: ./airflow
    container_name: airflow_webserver
    restart: unless-stopped
    depends_on:
      - postgres
      - airflow-init
    env_file: .env.prod
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__WEBSERVER__RBAC: "True"
      PYTHONWARNINGS: ignore
      AIRFLOW__CORE__DAG_DIR_LIST_INTERVAL: 10
    command: ["webserver"]
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/data:/opt/airflow/data

  airflow-scheduler:
    build: ./airflow
    container_name: airflow_scheduler
    restart: unless-stopped
    depends_on:
      - airflow-webserver
    env_file: .env.prod
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__IS_PAUSED_UPON_CREATION: False
      AIRFLOW__CORE__DAG_DIR_LIST_INTERVAL: 10
    command: ["scheduler"]
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/data:/opt/airflow/data
    
  fastapi:
    build:
      context: ./backend/api
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    env_file: .env.prod
    depends_on:
      - postgres

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    env_file: .env.prod
    depends_on:
      - fastapi

  nginx:
    image: nginx:alpine
    container_name: reverse_proxy
    ports:
      - "80:80"
    depends_on:
      - frontend
      - fastapi
      - airflow-webserver
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro

volumes:
  postgres_data: